service: lambda-api-alice

frameworkVersion: '3'

provider:
  name: aws
  stage: dev
  region: eu-central-1
  runtime: nodejs16.x
  lambdaHashingVersion: 20201221

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource: "*"

functions:
  postUser:
    handler: user-service.postUser
    events:
      - http:
          path: users
          method: post
          cors: true

  postAssets:
    handler: user-service.postAssets
    events:
      - http:
          path: assets
          method: post
          cors: true

  postCards:
    handler: user-service.postCards
    events:
      - http:
          path: cards
          method: post
          cors: true

  login:
    handler: user-service.login
    events:
      - http:
          path: login
          method: post
          cors: true

  getQRCode:
    handler: code-service.getQRCode
    events:
      - http:
          path: qr-codes
          method: post
          cors: true

  getQRCodeDef:
    handler: code-service.getQRCode
    events:
      - http:
          path: qr-codes
          method: get
          cors: true

  getUsers:
    handler: user-service.getUsers
    events:
      - http:
          path: users
          method: get
          cors: true

  getUser:
    handler: user-service.getUser
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
  confirmUser:
    handler: user-service.confirmUser
    events:
      - http:
          path: users/{id}/confirm
          method: post
          cors: true
  setCardToUser:
    handler: user-cards-service.setCardToUser
    events:
      - http:
          path: users/{id}/set-card
          method: post
          cors: true
  getUserByCard:
    handler: user-cards-service.getUserByCard
    events:
      - http:
          path: cards/{id}
          method: get
          cors: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  apigwBinary:
    types:
      - "*/*"
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true


resources:
  Resources:
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: autoping-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    assets:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: autoping-assets
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    cards:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: autoping-cards
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
